name=es-sink
connector.class=io.confluent.connect.elasticsearch.ElasticsearchSinkConnector
tasks.max=1

flush.synchronously=true

topics=\
  mongo.tableTopMongo.tableApplications,\
  mongo.tableTopMongo.tableImages,\
  mongo.tableTopMongo.tableSoundClips,\
  mongo.tableTopMongo.tableSvgs,\
  mongo.tableTopMongo.tableText,\
  mongo.tableTopMongo.tableVideos,\
  mongo.tableTopMongo.userApplications,\
  mongo.tableTopMongo.userImages,\
  mongo.tableTopMongo.userSoundClips,\
  mongo.tableTopMongo.userSvgs,\
  mongo.tableTopMongo.userText,\
  mongo.tableTopMongo.userVideos

connection.url=https://localhost:9200
connection.username=${file:table-top-secrets:elastic.root.username}
connection.password=${file:table-top-secrets:elastic.root.password}

type.name=_doc
key.ignore=false
schema.ignore=true
write.method=UPSERT
behavior.on.null.values=DELETE
tombstone.deletes.enabled=true

value.converter=org.apache.kafka.connect.json.JsonConverter
value.converter.schemas.enable=false

# Transforms

transforms=routeTableApplications,routeTableImages,routeTableSoundClips,routeTableSvgs,routeTableText,routeTableVideos,routeUserApplications,routeUserImages,routeUserSoundClips,routeUserSvgs,routeUserText,routeUserVideos,extractPayload,elasticMultitool,elasticEmbeddingTransform

transforms.routeTableApplications.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.routeTableApplications.regex=^mongo\.tableTopMongo\.tableApplications$
transforms.routeTableApplications.replacement=tableapplications

transforms.routeTableImages.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.routeTableImages.regex=^mongo\.tableTopMongo\.tableImages$
transforms.routeTableImages.replacement=tableimages

transforms.routeTableSoundClips.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.routeTableSoundClips.regex=^mongo\.tableTopMongo\.tableSoundClips$
transforms.routeTableSoundClips.replacement=tablesoundclips

transforms.routeTableSvgs.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.routeTableSvgs.regex=^mongo\.tableTopMongo\.tableSvgs$
transforms.routeTableSvgs.replacement=tablesvgs

transforms.routeTableText.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.routeTableText.regex=^mongo\.tableTopMongo\.tableText$
transforms.routeTableText.replacement=tabletext

transforms.routeTableVideos.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.routeTableVideos.regex=^mongo\.tableTopMongo\.tableVideos$
transforms.routeTableVideos.replacement=tablevideos    

transforms.routeUserApplications.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.routeUserApplications.regex=^mongo\.tableTopMongo\.userApplications$
transforms.routeUserApplications.replacement=userapplications

transforms.routeUserImages.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.routeUserImages.regex=^mongo\.tableTopMongo\.userImages$
transforms.routeUserImages.replacement=userimages    

transforms.routeUserSoundClips.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.routeUserSoundClips.regex=^mongo\.tableTopMongo\.userSoundClips$
transforms.routeUserSoundClips.replacement=usersoundclips

transforms.routeUserSvgs.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.routeUserSvgs.regex=^mongo\.tableTopMongo\.userSvgs$
transforms.routeUserSvgs.replacement=usersvgs 

transforms.routeUserText.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.routeUserText.regex=^mongo\.tableTopMongo\.userText$
transforms.routeUserText.replacement=usertext

transforms.routeUserVideos.type=org.apache.kafka.connect.transforms.RegexRouter
transforms.routeUserVideos.regex=^mongo\.tableTopMongo\.userVideos$
transforms.routeUserVideos.replacement=uservideos

transforms.extractPayload.type=org.apache.kafka.connect.transforms.ExtractField$Value
transforms.extractPayload.field=payload

transforms.elasticMultitool.type=com.example.kafka.ElasticMultitool
transforms.elasticMultitool.json.whitelist=\
  tableapplications:tid|aid|s|n,\
  tableimages:tid|iid|s|n,\
  tablesoundclips:tid|sid|s|n,\
  tablesvgs:tid|sid|s|n,\
  tabletext:tid|xid|s|n,\
  tablevideos:tid|vid|s|n,\
  userapplications:uid|aid|s|n,\      
  userimages:uid|iid|s|n,\
  usersoundclips:uid|sid|s|n,\
  usersvgs:uid|sid|s|n,\
  usertext:uid|xid|s|n,\
  uservideos:uid|vid|s|n
transforms.elasticMultitool.json.id.mapping=\
  tableapplications:aid,\
  tableimages:iid,\
  tablesoundclips:sid,\
  tablesvgs:sid,\
  tabletext:xid,\
  tablevideos:vid,\
  userapplications:aid,\
  userimages:iid,\
  usersoundclips:sid,\
  usersvgs:sid,\
  usertext:xid,\
  uservideos:vid

transforms.elasticEmbeddingTransform.type=com.example.kafka.ElasticEmbeddingTransform
transforms.elasticEmbeddingTransform.embedding.api.url=http://localhost:7400/embed
transforms.elasticEmbeddingTransform.embedding.api.key=
transforms.elasticEmbeddingTransform.embedding.model=all-MiniLM-L6-v2
transforms.elasticEmbeddingTransform.embedding.whitelist=\
  tableapplications:n,\
  tableimages:n,\
  tablesoundclips:n,\
  tablesvgs:n,\
  tabletext:n,\
  tablevideos:n,\
  userapplications:n,\
  userimages:n,\
  usersoundclips:n,\
  usersvgs:n,\
  usertext:n,\
  uservideos:n

# Security

elastic.security.protocol=SSL
elastic.https.ssl.keystore.location=${file:table-top-secrets:elastic.keystore.location}
elastic.https.ssl.keystore.password=${file:table-top-secrets:elastic.keystore.password}
elastic.https.ssl.keystore.type=${file:table-top-secrets:elastic.keystore.type}
elastic.https.ssl.key.password=${file:table-top-secrets:elastic.key.password}
elastic.https.ssl.truststore.location=${file:table-top-secrets:elastic.truststore.location}
elastic.https.ssl.truststore.password=${file:table-top-secrets:elastic.truststore.password}
elastic.https.ssl.truststore.type=${file:table-top-secrets:elastic.truststore.type}
elastic.https.ssl.protocol=TLS
